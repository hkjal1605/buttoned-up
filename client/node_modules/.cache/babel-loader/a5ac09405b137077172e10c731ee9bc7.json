{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootSaga from './root-saga';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["E:/MY_CODES/MY_WEB_DEV/buttoned-up/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","fetchCollectionsStart","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAqC,mBAArC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACH;;AAED,OAAO,MAAMY,KAAK,GAAGd,WAAW,CAACO,WAAD,EAAcN,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,QAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { fetchCollectionsStart} from './shop/shop.sagas';\r\n\r\nimport rootSaga from './root-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger)\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}