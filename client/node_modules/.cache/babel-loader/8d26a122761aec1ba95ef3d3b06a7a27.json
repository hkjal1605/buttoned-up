{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSigninSuccess, googleSigninFailure, emailSigninSuccess, emailSigninFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(user) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const userSnapshot = yield userRef.get();\n  yield put(googleSigninSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(emailSigninFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(emailSigninFailure(error));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const userAuth = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, userAuth, {\n      displayName\n    });\n    const userSnapshot = yield userRef.get();\n    yield put(signUpSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* userSaga() {\n  yield all([call(onGoogleSigninStart), call(onEmailSigninStart), call(onCheckUserSession), call(onSignOut), call(onSignUp)]);\n}\n;","map":{"version":3,"sources":["E:/MY_CODES/MY_WEB_DEV/buttoned-up/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSigninSuccess","googleSigninFailure","emailSigninSuccess","emailSigninFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","user","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","userAuth","signOut","signUp","displayName","createUserWithEmailAndPassword","onGoogleSigninStart","GOOGLE_SIGNIN_START","onEmailSigninStart","EMAIL_SIGNIN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","onSignUp","SIGN_UP_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { googleSigninSuccess, googleSigninFailure, emailSigninSuccess, emailSigninFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nexport function* getSnapshotFromUserAuth(user) {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(googleSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data()}))\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(googleSigninFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signInWithEmail({ payload: { email, password }}) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(emailSigninFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch(error) {\r\n        yield put(emailSigninFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    } catch(error) {\r\n        yield put(signOutFailure(error))\r\n    }\r\n};\r\n\r\nexport function* signUp({ payload: { email, password, displayName }}) {\r\n    try {\r\n        const userAuth = yield auth.createUserWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, userAuth, { displayName });\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signUpSuccess({ id: userSnapshot.id, ...userSnapshot.data()}))\r\n    } catch(error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSigninStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* onEmailSigninStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail)\r\n};\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n};\r\n\r\nexport function* onSignOut() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n};\r\n\r\nexport function* onSignUp() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n};\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSigninStart), call(onEmailSigninStart), call(onCheckUserSession), call(onSignOut), call(onSignUp)]);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}