{"ast":null,"code":"var _jsxFileName = \"E:\\\\MY_CODES\\\\MY_WEB_DEV\\\\buttoned-up\\\\src\\\\components\\\\signIn\\\\signIn.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './signIn.styles.scss';\nimport mail_icon from '../../img/mail.png';\nimport password_icon from '../../img/password.png';\nimport { Link } from 'react-router-dom';\nimport CustomButton from '../custom-button/customButton.component';\nimport FormInput from '../form-input/formInput.component';\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSigninStart,\n  googleSigninStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    name: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSigninStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"signin__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"signin__instruction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Sign in using the given credentials\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signin__form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    imgUrl: mail_icon,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    imgUrl: password_icon,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSigninStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Sign In With Google\"))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    className: \"signin__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Don't have an account! Sign Up\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSigninStart: () => dispatch(googleSigninStart()),\n  emailSigninStart: (email, password) => dispatch(emailSigninStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["E:/MY_CODES/MY_WEB_DEV/buttoned-up/src/components/signIn/signIn.component.jsx"],"names":["React","useState","connect","mail_icon","password_icon","Link","CustomButton","FormInput","googleSigninStart","emailSigninStart","SignIn","userCredentials","setCredentials","name","password","email","handleSubmit","event","preventDefault","handleChange","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './signIn.styles.scss';\r\n\r\nimport mail_icon from '../../img/mail.png';\r\nimport password_icon from '../../img/password.png';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport CustomButton from '../custom-button/customButton.component';\r\n\r\nimport FormInput from '../form-input/formInput.component';\r\n\r\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.actions';\r\n\r\nconst SignIn = ({ emailSigninStart, googleSigninStart }) => {\r\n    const [ userCredentials, setCredentials ] = useState({ name: '', password: ''});\r\n    \r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        emailSigninStart(email, password);\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({ ...userCredentials,  [name]: value });\r\n    }\r\n\r\n    return(\r\n        <div className='signin'>\r\n            <h3 className='signin__heading'>I already have an account</h3>\r\n            <span className='signin__instruction'>Sign in using the given credentials</span>\r\n\r\n            <form className='signin__form' onSubmit={handleSubmit}>\r\n                <FormInput name='email' type='email' value={email} handleChange={handleChange} label='Email' imgUrl={mail_icon} required />\r\n                \r\n                <FormInput name='password' type='password' value={password} handleChange={handleChange} label='Password' imgUrl={password_icon} required />\r\n                \r\n                <div className='button-container'>\r\n                    <CustomButton type='submit'>Sign In</CustomButton>\r\n                    <CustomButton type='button' onClick={googleSigninStart}>Sign In With Google</CustomButton>\r\n                </div>\r\n                \r\n            </form>\r\n\r\n            <Link to='/signup' className='signin__link'>Don't have an account! Sign Up</Link>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSigninStart: () => dispatch(googleSigninStart()),\r\n    emailSigninStart: (email, password) => dispatch(emailSigninStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}