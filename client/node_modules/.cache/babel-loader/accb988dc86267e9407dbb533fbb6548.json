{"ast":null,"code":"var _jsxFileName = \"E:\\\\MY_CODES\\\\MY_WEB_DEV\\\\buttoned-up\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionsPage from '../collections/collections.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/withSpinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    console.log(this.state);\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n      console.log(this.state);\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isloading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isloading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 79\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/MY_CODES/MY_WEB_DEV/buttoned-up/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionOverview","CollectionsPage","updateCollections","WithSpinner","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","console","log","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,MAAMC,6BAA6B,GAAGH,WAAW,CAACH,kBAAD,CAAjD;AACA,MAAMO,0BAA0B,GAAGJ,WAAW,CAACF,eAAD,CAA9C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AAEAK,IAAAA,aAAa,CAACI,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAlB,MAAAA,iBAAiB,CAACmB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACH,KALD;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEc,KAAK,CAACC,IAAK,EAAnC;AACI,MAAA,MAAM,EAAEX,KAAK,iBACR,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEX,KAAK,iBAAK,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEH;AAAvC,SAAoDG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;;AAlCkC;;AAqCvC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAEmB,cAAc,IAAIM,QAAQ,CAACzB,iBAAiB,CAACmB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAevB,OAAO,CAAC,IAAD,EAAM4B,kBAAN,CAAP,CAAiClB,QAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionsPage from '../collections/collections.component';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nimport WithSpinner from '../../components/with-spinner/withSpinner.component';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n        console.log(this.state);\r\n\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap);\r\n            this.setState({loading: false});\r\n            console.log(this.state);\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const {loading} = this.state;\r\n        return(\r\n            <div className='shop'>\r\n                <Route exact path = {`${match.path}`} \r\n                    render={props => \r\n                        (<CollectionOverviewWithSpinner isloading={loading} {...props} />)\r\n                    } \r\n                />\r\n                <Route path={`${match.path}/:collectionId`} render={props => (<CollectionsPageWithSpinner isloading={loading} {...props} />)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\n    \r\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}